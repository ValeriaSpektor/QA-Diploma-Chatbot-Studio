name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Установка Node.js версии 20
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 3. Установка зависимостей
      - name: Install dependencies
        run: npm ci

      # 4. Сборка Docker-образа с нужной конфигурацией
      - name: Build Docker image
        run: |
          docker build -t my-docker-image .

      # 5. Запуск тестов в Docker с Chrome
      - name: Run tests in Docker
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/allure-results:/app/allure-results \
            -v ${{ github.workspace }}/allure-report:/app/allure-report \
            my-docker-image

      # 6. Генерация Allure отчета
      - name: Generate Allure Report
        run: |
          npx allure generate allure-results -o allure-report --clean || \
          npx allure generate allure-results -o allure-report

      # 7. Деплой Allure отчета на GitHub Pages
      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report

      # 8. Отправка уведомлений в Telegram с изображением отчета
      - name: Notify Telegram with Image
        run: |
          java -jar notifications/allure-notifications.jar \
            -configFile notifications/config.json \
            -project "QA-Diploma-Chatbot-Studio" \
            -reportLink "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"

      # 9. Кэширование Node.js модулей (ускоряет сборку)
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 10. Очистка временных данных
      - name: Post Cleanup
        run: |
          echo "Cleaning up temporary files..."
          rm -rf node_modules
