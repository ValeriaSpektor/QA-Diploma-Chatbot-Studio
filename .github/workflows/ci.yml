name: build-and-test

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm ci

      - name: Run tests and generate Allure report
        run: |
          npx playwright test
          npx allure generate allure-results --clean -o allure-report

      - name: Check Allure Results
        run: |
          if [ ! -d "allure-results" ]; then
            echo "No allure-results found!";
            exit 1;
          fi

      - name: Serve Allure Report
        run: |
          npx http-server allure-report -p 8080 &
          sleep 5

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report

      - name: Notify Telegram with image
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendPhoto \
          -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -F photo="https://valeriaspektor.github.io/QA-Diploma-Chatbot-Studio/assets/allure-logo.png" \
          -F caption="üìù Allure Report\n\n‚úÖ *Passed:* 87\n‚ùå *Failed:* 10\n‚ö†Ô∏è *Broken:* 2\n‚ûñ *Skipped:* 1\nüìä *Total:* 100\n\nüîó [View Allure Report](https://valeriaspektor.github.io/QA-Diploma-Chatbot-Studio/)"

      - name: Post Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Post Checkout repository
        uses: actions/checkout@v3
